version: '3'
services:
  postgres:
    restart: always
    container_name: postgres
    image: postgres:latest
    ports:
      - '5432:5432'
    volumes:
      - ./data/postgres:/data/postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - postgres

  pgadmin:
    restart: always
    links:
      - postgres:postgres
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - '8080:80'
    volumes:
      - ./data/pgadmin:/root/.pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - postgres

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.25
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - http.port=9200
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - cluster.name=es-cluster
      - discovery.seed_hosts=elasticsearch
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/var/lib/elasticsearch
    ports:
      - '9200:9200'
    networks:
      - postgres

  kibana:
    restart: always
    image: docker.elastic.co/kibana/kibana:7.17.25
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: ${ELASTICSEARCH_NODE}
      ELASTICSEARCH_USERNAME: ${ELASTICSEARCH_USERNAME}
      ELASTICSEARCH_PASSWORD: ${ELASTICSEARCH_PASSWORD}
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    networks:
      - postgres

volumes:
  elastic-data:
    driver: local
  es_data:
    driver: local

networks:
  postgres:
    driver: bridge
